rfile
------------------------------------------------------------------------------------------------------------------------------------
file operations:
     Opening:
        Opening under riodevice: open, open_input, open_output 'this determines access mode
        Opening under file: open(..., create_disposition), open_input(..., create_disposition), open_output(..., create_disposition)
        Open overloads:
             open(const char* = NULL) 'create new or open existing file for reading and writing; file pointer at 0
             open(const char*,file_open_flag) 'open or create file based on flag; file pointer initial location determined by flag
             (same for,)
             open_input
             open_output
          File Locking:
             Windows API supports file locking directly through CreateFile (indeed, it's not even optional to specify
             a file share mode). On linux, a similar effect is accomplished through file locking using flock and fcntl.
             File locking is specified optionally in the creation/opening of a file using rtypes::file. On Windows, the
             share mode FileShareNone will be used by default if the locking overloads are not called. The locking overloads
             look like so:

             On POSIX implementations, the lock is performed immediately after the file is created. The API call will block until
             it gains access to the file or fails.

        Create disposition: (file open mode)
               - create exclusively 'open fails if file already exists
                 O_CREAT | O_EXCL
                 CREATE_NEW
               - create always 'sets existing file to zero OR creates new file
                 O_CREAT | O_TRUNC
                 CREATE_ALWAYS
               - open always 'always opens existing or creates new
                 O_CREAT
                 OPEN_ALWAYS
               - open append 'always opens existing for append or creates new
                 O_CREAT
                 OPEN_ALWAYS
                 (set file pointer to append)
               - open existing 'only open an existing file
                 /* no flag required (default) */
                 OPEN_EXISTING
               - open truncate existing 'open an existing file for truncate; removes all data and sets file pointer to zero
                 O_TRUNC
                 TRUNCATE_EXISTING
               - open append existing 'open a file for append only if it exists
                 OPEN_EXISTING
                 (set file pointer to append)

      Editing:
        Truncate: (to size or zero)
        Resize: (to non-zero size)
        Set File Pointer:
        Set File Permissions:
        
------------------------------------------------------------------------------------------------------------------------------------
